name: deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # env:
    #   WEB_PORT: ${{ secrets.WEB_PORT }}
    #   DB_NAME: ${{ secrets.JAWS_DATABASE }}
    #   DB_USER: ${{ secrets.JAWS_USERNAME }}
    #   DB_PASS: ${{ secrets.JAWS_PASSWORD }}
    #   DB_PORT: ${{ secrets.JAWS_PORT }}
    #   DB_HOST: ${{ secrets.JAWS_HOST }}
    #   DATABASE_URL: ${{ secrets.JAWSDB_URL }}

    #   APP_NAME: __APP_NAME__
    #   DEBUG: false
    #   APP_ENCODING: ${{ vars.APP_ENCODING }}
    #   APP_DEFAULT_LOCALE: ${{ vars.APP_DEFAULT_LOCALE }}
    #   APP_DEFAULT_TIMEZONE: ${{ vars.APP_DEFAULT_TIMEZONE }}
    #   SECURITY_SALT: ${{ secrets.SECURITY_SALT }}

    #   OPENWEATHER_ONEDAY_URL: ${{ vars.OPENWEATHER_ONEDAY_URL }}
    #   OPENWEATHER_FIVEDAYS_URL: ${{ vars.OPENWEATHER_FIVEDAYS_URL }}
    #   OPENWEATHER_KEY: ${{ secrets.OPENWEATHER_KEY }}
    #   NEWSAPI_URL: ${{ vars.NEWSAPI_URL }}
    #   NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
    steps:
        - name: Checkout repository
          uses: actions/checkout@v2
   
        - name: Set up Heroku
          uses: akhileshns/heroku-deploy@v3.12.14
          with:
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: "newsapp-cp4"
            heroku_email: ${{secrets.HEROKU_EMAIL}} 
            usedocker: true   
           
        # - name: push registry
        #   run: docker push registry.heroku.com/newsapp-cp4/web           
        # - name: db migration
        #   run: docker exec newsapp-cp4_php_1 bin/cake migrations migrate

            # docker exec newsapp-cp4_php_1 composer update  
            
            
         # - name: Set up PHP
        #   run: |
        #     heroku update
        #     sudo apt-get update
        #     sudo apt-get install -y docker-compose
        #     docker-compose -f docker-compose_prod.yml up -d --build
        #     docker exec news_cakephp4_php_1 composer update